class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        #checking if array is empty
        if len(nums) == 0:  
            return 0
        
        #checking if array has only 2 elements and if they add up to target
        if len(nums) == 2:  
            if nume[0]+nums[1] == target:
                return [0,1]
            else:
                return 0
        
        #brute force approach- checking all pairs - time complexity O(n^2)
        for i in range(0,len(nums)):    
            for j in range(i+1,len(nums)):
                if nums[i]+nums[j] == target:
                    return [i,j]
                
        #if array is sorted - time complexity - O(n) 
        # min = 0
        # max = len(nums)-1
        # while min<max:
        #     if nums[min]+nums[max] > target:
        #         max = max-1
        #     elif nums[min]+nums[max] < target:
        #         min= min+1
        #     else:
        #         return [min,max]
            
        # if array is not sorted - time complexity - O()
        
